[1m[36m/*************************************************************/
/                            VECTOR                           /
/*************************************************************/[0m

[1m[32m***** Performance *****[0m

[1m[36mTime taken: [0m2.32498

[1m[32m***** Functions *****[0m


[1m[34mConstructors: [0m
42 42 42 42 42 
bla bla bla bla bla 
42 42 42 42 42 
42 42 42 42 42 
42 42 
43 43 43 43 43 
a 1 a 1 a 1 

[1m[34mIterators:[0m
Pre incrementation : 1 2 3 4 5 
Post incrementation : 1 2 3 4 5 
Pre decrementation : 0 5 4 3 2 
Post decrementation : 0 5 4 3 2 
Addition : 3 3

Substraction : 4 2

[1m[34mReverse iterators :[0m
Pre incrementation : 5 4 3 2 1 
Post incrementation : 5 4 3 2 1 
Pre decrementation : 1 2 3 4 
Post decrementation : 1 2 3 4 
Addition : 3 3

Substraction : 2 4

[1m[34mSize, Capacity & Empty:[0m
1 2 
2 2
1 2 3 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
50 50
1 2 3 
3 100
1 2 3 
3 100
1 2 3 2 
4 100
Not empty
Empty

[1m[34mAccess:[0m
1
42
4
8
1
5

[1m[34mModifiers :[0m
1 2 3 4 5 
1 2 3 4 
0 1 2 3 4 
0 1 0 2 3 4 
0 1 42 42 42 42 42 0 2 3 4 
0 1 1 2 3 1 2 3 1 2 3 42 42 42 42 42 0 2 3 4 
0 1 1 2 1 2 3 1 2 3 42 42 42 42 42 0 2 3 4 
0 1 1 2 3 1 2 3 42 42 42 42 42 0 2 3 4 
1 2 3 1 2 3 1 2 3 
0 1 1 2 3 1 2 3 42 42 42 42 42 0 2 3 4 
Empty

[1m[34mComparison operators : [0m
N
N
N
Y
Y
Y
Y
N
N
Y
Y
N

[1m[32m***** Correction specific requirements ***** [0m
[1m[34mIterator and const iterator comparison:[0m
Comparison works 

[1m[34mSwap:[0m
Before Swap :
V1: 42 42 42 
Iterator, ref and pointer 1: 42 42 42

V2: 43 43 43 
Iterator, ref and pointer 2: 43 43 43

[36m--- Swapping v1 - v2 ---[0m

V1: 43 43 43 
Iterator, ref and pointer 1 (must remain the same): 42 42 42

V2: 42 42 42 
Iterator, ref and pointer 2 (must remain the same): 43 43 43

Iterator 1 iterating in new 2: 42 42 42 
Iterator 2 iterating in new 1: 43 43 43 
[1m[36mTime taken: [0m0.000282
